//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "eigenda_batches")]
pub struct Model {
    #[sea_orm(
        primary_key,
        auto_increment = false,
        column_type = "Binary(BlobSize::Blob(None))"
    )]
    pub batch_header_hash: Vec<u8>,
    pub batch_id: i64,
    pub blobs_count: i32,
    #[sea_orm(column_type = "Binary(BlobSize::Blob(None))")]
    pub l1_tx_hash: Vec<u8>,
    pub l1_block: i64,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::eigenda_blobs::Entity")]
    EigendaBlobs,
}

impl Related<super::eigenda_blobs::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::EigendaBlobs.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
